<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://oneweb/skin/preferences/preferences.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneweb/content/bindings/bindings.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneweb/skin/dialog.css" type="text/css"?>

<?xul-overlay href="chrome://oneweb/content/overlays/macMenuOverlay.xul"?>

<dialog id="preferences" windowtype="ow:preferences" title="OneWeb Preferences"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml"
  buttons="accept,cancel" onload="onLoad()" ondialogaccept="return savePrefs()">

  <script type="text/javascript;version=1.7" src="libs/moduleloader.js"/>
  <script type="text/javascript;version=1.7"><![CDATA[
    ML.importMod("model/account.js");

    function onLoad() {
      var prefElems = document.getElementsByAttribute("pref", "*");
      for (var i = 0; i < prefElems.length; i++) {
        var pref = prefElems[i].getAttribute("pref").split(/[=:]/);
        var val = prefManager.getPref(pref[0]);
        if (pref[2] == "int") {
            prefElems[i].setAttribute("regex", "^\\d+$");
            prefElems[i].setAttribute("errortext", "Please enter number");
            //prefElems[i].setAttribute("type", "verifiable");
        }
        prefElems[i][pref[1]] = val == null ? "" : val;
        if (prefManager.builtinPref(pref[0]))
          prefElems[i].disabled = true;
      }

      prefElems = document.getElementsByAttribute("prefSet", "*");
      for (i = 0; i < prefElems.length; i++) {
        var prefSetter = prefElems[i].getAttribute("prefSet");
        var prefName = prefElems[i].getAttribute("prefName")
        var val = prefManager.getPref(prefName);
        try {
          eval("(function(){"+prefSetter+"}).call(__element__)",
               {__element__: prefElems[i], __value__: val == null ? "" : val});
        } catch(ex){}
      }
    }

    function focusElement(el)
    {
        var p = el.parentNode;
        while (p && p.localName != "tabpanel")
          p = p.parentNode;
        if (p)
          p.parentNode.selectedPanel = p;

        el.focus();
    }

    function savePrefs()
    {
      var valsToSet = [];
      var prefElems = document.getElementsByAttribute("pref", "*");
      for (i = 0; i < prefElems.length; i++) {
        if (prefElems[i].disabled)
          continue;
        var pref = prefElems[i].getAttribute("pref").split(/[=:]/);
        var val = prefElems[i][pref[1]];

        if (pref[2] == "int" && typeof(val) == "string")
          val = +val;

        valsToSet.push([pref[0], val]);
      }

      prefElems = document.getElementsByAttribute("prefGet", "*");
      for (i = 0; i < prefElems.length; i++) {
        if (prefElems[i].disabled)
          continue;

        try {
          val = eval("(function(){return "+
                     prefElems[i].getAttribute("prefGet")+
                     "}).call(prefElems[i])");
        } catch (error) {
          focusElement(prefElems[i]);
          alert(error);

          return false;
        }

        if (prefElems[i].getAttribute("prefName"))
          valsToSet.push([prefElems[i].getAttribute("prefName"), val]);
      }

      for (i = 0; i < valsToSet.length; i++)
        prefManager.setPref(valsToSet[i][0], valsToSet[i][1])

      return true;
    }
  ]]></script>

  <group id="macMenu"/>

  <toolbox id="mainToolbox">
    <menubar id="macMenuBar"/>
  </toolbox>

  <tabbox flex="1" class="chromeclass-toolbar">
    <tabs  style="-moz-appearance: -moz-mac-unified-toolbar;">
      <tab id="connection" label="Connection"/>
      <tab id="status" label="Services"/>
    </tabs>
    <tabpanels flex="1">
      <tabpanel>
        <grid flex="1">
          <columns>
            <column/>
            <column flex="1"/>
          </columns>
          <rows>
            <row>
              <label value="Jabber ID:"/>
              <textbox type="verifiable"
                       regex="^[^ \t\n&quot;&amp;&apos;/:&lt;&gt;@]+@(?:\w(?:[\w-]*\w)?\.)*[^\W\d](?:[\w-]*\w)?$"
                       prefSet="this.value = account.myJID ? account.myJID.shortJID : ''"
                       prefGet="account.setUserAndPass(this.value, document.getElementById('pass').value, true)"/>
            </row>
            <row>
              <label value="Password:"/>
              <textbox id="pass"
                       type="verifiable" internaltype="password"
                       regex="."
                       errortext="Password can't be empty"
                       prefSet="this.value = account.connectionInfo.pass"
                       prefGet=""/>
            </row>
          </rows>
        </grid>
      </tabpanel>

      <tabpanel orient="vertical">
        <groupbox>
          <caption label="Allow executing 'Get all opened tabs' only by:"/>
          <radiogroup orient="horizontal"
                      pref="oneweb.permissions.openedtabs=selectedIndex">
            <radio value="0" label="My other clients"/>
            <radio value="1" label="My contacts"/>
            <radio value="2" label="Everyone"/>
          </radiogroup>
        </groupbox>
        <groupbox>
          <caption label="Allow executing 'Open URL in new tab' only by:"/>
          <radiogroup orient="horizontal"
                      pref="oneweb.permissions.openurl=selectedIndex">
            <radio value="0" label="My other clients"/>
            <radio value="1" label="My contacts"/>
            <radio value="2" label="Everyone"/>
          </radiogroup>
        </groupbox>
        <groupbox>
          <caption label="Allow executing 'Search bookmarks' only by:"/>
          <radiogroup orient="horizontal"
                      pref="oneweb.permissions.searchbookmarks=selectedIndex">
            <radio value="0" label="My other clients"/>
            <radio value="1" label="My contacts"/>
            <radio value="2" label="Everyone"/>
          </radiogroup>
        </groupbox>
      </tabpanel>

    </tabpanels>
  </tabbox>
</dialog>
